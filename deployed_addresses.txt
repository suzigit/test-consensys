This doc describes where the Tradeable Wallet contracts live on the test net:

* Contract Creator: 0x5b357b21631aa56d9328ef64d507f831faf1e18d
It was created in this transaction: https://rinkeby.etherscan.io/tx/0xea3fb58fca4851b50d04575d5f64846e6eda7f15065dcdd4bd13d8cb829b223d
Owner: 0x8816e671607f19eee6a400f07fcb562ee5150b46


* TokenERC20_Mock:0xc3994c5cbddf7ce38b8a2ec2830335fa8f3eea6a
It was created in this transaction: https://rinkeby.etherscan.io/tx/0x4b889d97e317a7de7bf30a08e5e61717877d034e75b751c07e3c4d0c0d990e08
It was tracked by EtherScan as a valid token: https://rinkeby.etherscan.io/token/0xc3994c5cbddf7ce38b8a2ec2830335fa8f3eea6a
This symbol is TTW (Token for Tradeable Wallet)
I also veriied its source code, so you can read/write using EtherScan by using Read Contract/Write Contract functionalities.
Owner: 0x8816e671607f19eee6a400f07fcb562ee5150b46
This Mock is used during the test of withdraw functionality.
For this test, you can also use the address of any ERC20 token that you know at testnet.
At the time of this writing, the owner has 975 tokens and 0xC3ee4B592FD3EBD53ba757Ae2DAF484b20D75aE4 has 25 tokens


* Tradeable Contract
Obs: In general the Tradeable Contracts (representing the Tradeable Wallets) are created dinamically, by the use of this application.
Then, it does not need to be deployed a priori on test net
However, it was necessary to deploy it on localhost in order to make the unit tests


-----------------

Also deployed these contracts:
These were created only to be used on illustration of the use of a lib

* SafeMath: 0x25213e8abe3405f42d5876bbb29ef95df107c09e
It was created in this transaction: https://rinkeby.etherscan.io/tx/0xc40ff03e7a4c1875ade3169d7fe761c54a389d985daf7975ece47cd9a65bbe6e
Used only to illustrate the use of a lib

* LibraryDemo: 0x22438bfcd21c5c76356d56fc2f3a4b827431a611
It was created in this transaction: https://rinkeby.etherscan.io/tx/0x73b25b0f2a406030aba6551329a3caf6958308abf38878b6257504119d054362
