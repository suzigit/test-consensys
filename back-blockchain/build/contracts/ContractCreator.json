{
  "contractName": "ContractCreator",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewTradeableWallet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createTradeableContract",
      "outputs": [
        {
          "name": "subcontractAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "b",
          "type": "bool"
        }
      ],
      "name": "setCircuitBreaker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractCount",
      "outputs": [
        {
          "name": "contractCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getContractAt",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b5033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117538061007b6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634250644914610093578063474da79a146100c257806375f12b211461012f57806379b0676b1461015e578063893d20e8146101cb5780638da5cb5b146102225780639399869d14610279578063b5e751df146102a4575b600080fd5b34801561009f57600080fd5b506100c06004803603810190808035151590602001909291905050506102fb565b005b3480156100ce57600080fd5b506100ed60048036038101908080359060200190929190505050610373565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013b57600080fd5b506101446103b1565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b50610189600480360381019080803590602001909291905050506103c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d757600080fd5b506101e061041d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022e57600080fd5b50610237610446565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028557600080fd5b5061028e61046c565b6040518082815260200191505060405180910390f35b3480156102b057600080fd5b506102b9610479565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035757600080fd5b806000806101000a81548160ff02191690831515021790555050565b60018181548110151561038257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff1681565b6000600180549050821015610413576001828154811015156103e157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610418565b600090505b919050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050905090565b6000806000809054906101000a900460ff1615151561049757600080fd5b336104a06105c5565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156104f2573d6000803e3d6000fd5b50905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fcf7d6721918b3164d3679248fb2d841009588e2d7dde6361beceade182a24f4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a18091505090565b604051611152806105d6833901905600608060405234801561001057600080fd5b5060405160208061115283398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506028600360006101000a81548160ff021916908360ff1602179055507f09f86d61eb5d6904c1fa8e5f071f171ec90eccc6e0a7b61d563a7d693db815f660008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150611010806101426000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307cd2589146100d25780631f2be9c914610101578063215238ac1461013257806343ff4564146101c25780634af1c8a9146101fd578063521568bd1461022e578063893d20e814610259578063897fbabf146102b05780638da5cb5b146103405780639f727c2714610397578063a60f7a38146103ae578063b17fd10514610413578063c7f7bd1d1461046a578063cb7c86b2146104b9575b005b3480156100de57600080fd5b506100e76104c3565b604051808215151515815260200191505060405180910390f35b34801561010d57600080fd5b506101166104d6565b604051808260ff1660ff16815260200191505060405180910390f35b34801561013e57600080fd5b506101476104e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018757808201518184015260208101905061016c565b50505050905090810190601f1680156101b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ce57600080fd5b506101fb600480360381019080803590602001908201803590602001919091929391929390505050610587565b005b34801561020957600080fd5b506102126105f8565b604051808260ff1660ff16815260200191505060405180910390f35b34801561023a57600080fd5b5061024361060f565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610685565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102bc57600080fd5b506102c56106ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103055780820151818401526020810190506102ea565b50505050905090810190601f1680156103325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034c57600080fd5b50610355610750565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103a357600080fd5b506103ac610775565b005b3480156103ba57600080fd5b506103f9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610851565b604051808215151515815260200191505060405180910390f35b34801561041f57600080fd5b5061046860048036038101908080356fffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001919091929391929390505050610a86565b005b34801561047657600080fd5b5061047f610c03565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c1610c25565b005b600160109054906101000a900460ff1681565b600360009054906101000a900460ff1681565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e257600080fd5b8181600291906105f3929190610f3f565b505050565b6000600360009054906101000a900460ff16905090565b6000600160109054906101000a900460ff161561065e57600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050610682565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107465780601f1061071b57610100808354040283529160200191610746565b820191906000526020600020905b81548152906001019060200180831161072957829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107d057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561084e573d6000803e3d6000fd5b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108af57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561097357600080fd5b505af1158015610987573d6000803e3d6000fd5b505050506040513d602081101561099d57600080fd5b810190808051906020019092919050505090507f68b333934bebe88f9d460d709b614c41d6feeafe7585c524b441166d7856716c846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168584604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390a18091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ae157600080fd5b60018060106101000a81548160ff02191690831515021790555082600160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550818160029190610b45929190610f3f565b507fe49eb4b758b4cf05f8be0e4fe524b59a5167d2778884883b4815b2ac3860959c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050565b600160009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60008060008060011515600160109054906101000a900460ff161515141515610c4d57600080fd5b600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff163410151515610c8c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f09f86d61eb5d6904c1fa8e5f071f171ec90eccc6e0a7b61d563a7d693db815f6846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000600160106101000a81548160ff02191690831515021790555073e4aaa0fc768fbbafaa15f3cf16530b1d082a95b09250600360009054906101000a900460ff1660ff16600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16811515610e2757fe5b04915081600160009054906101000a90046fffffffffffffffffffffffffffffffff160390506000600160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff166108fc836fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015610edf573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015610f38573d6000803e3d6000fd5b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f8057803560ff1916838001178555610fae565b82800160010185558215610fae579182015b82811115610fad578235825591602001919060010190610f92565b5b509050610fbb9190610fbf565b5090565b610fe191905b80821115610fdd576000816000905550600101610fc5565b5090565b905600a165627a7a72305820a829189989a4f628325f95ca5ed2d524d878a91dcc0678a7677769df13d8e20d0029a165627a7a7230582073f3837b752248c93438b4802b03aeb8534023f4d6801bd69d6dc651baca25e70029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634250644914610093578063474da79a146100c257806375f12b211461012f57806379b0676b1461015e578063893d20e8146101cb5780638da5cb5b146102225780639399869d14610279578063b5e751df146102a4575b600080fd5b34801561009f57600080fd5b506100c06004803603810190808035151590602001909291905050506102fb565b005b3480156100ce57600080fd5b506100ed60048036038101908080359060200190929190505050610373565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013b57600080fd5b506101446103b1565b604051808215151515815260200191505060405180910390f35b34801561016a57600080fd5b50610189600480360381019080803590602001909291905050506103c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d757600080fd5b506101e061041d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022e57600080fd5b50610237610446565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028557600080fd5b5061028e61046c565b6040518082815260200191505060405180910390f35b3480156102b057600080fd5b506102b9610479565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035757600080fd5b806000806101000a81548160ff02191690831515021790555050565b60018181548110151561038257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff1681565b6000600180549050821015610413576001828154811015156103e157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610418565b600090505b919050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050905090565b6000806000809054906101000a900460ff1615151561049757600080fd5b336104a06105c5565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156104f2573d6000803e3d6000fd5b50905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fcf7d6721918b3164d3679248fb2d841009588e2d7dde6361beceade182a24f4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a18091505090565b604051611152806105d6833901905600608060405234801561001057600080fd5b5060405160208061115283398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506028600360006101000a81548160ff021916908360ff1602179055507f09f86d61eb5d6904c1fa8e5f071f171ec90eccc6e0a7b61d563a7d693db815f660008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150611010806101426000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307cd2589146100d25780631f2be9c914610101578063215238ac1461013257806343ff4564146101c25780634af1c8a9146101fd578063521568bd1461022e578063893d20e814610259578063897fbabf146102b05780638da5cb5b146103405780639f727c2714610397578063a60f7a38146103ae578063b17fd10514610413578063c7f7bd1d1461046a578063cb7c86b2146104b9575b005b3480156100de57600080fd5b506100e76104c3565b604051808215151515815260200191505060405180910390f35b34801561010d57600080fd5b506101166104d6565b604051808260ff1660ff16815260200191505060405180910390f35b34801561013e57600080fd5b506101476104e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561018757808201518184015260208101905061016c565b50505050905090810190601f1680156101b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ce57600080fd5b506101fb600480360381019080803590602001908201803590602001919091929391929390505050610587565b005b34801561020957600080fd5b506102126105f8565b604051808260ff1660ff16815260200191505060405180910390f35b34801561023a57600080fd5b5061024361060f565b6040518082815260200191505060405180910390f35b34801561026557600080fd5b5061026e610685565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102bc57600080fd5b506102c56106ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103055780820151818401526020810190506102ea565b50505050905090810190601f1680156103325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034c57600080fd5b50610355610750565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103a357600080fd5b506103ac610775565b005b3480156103ba57600080fd5b506103f9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610851565b604051808215151515815260200191505060405180910390f35b34801561041f57600080fd5b5061046860048036038101908080356fffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001919091929391929390505050610a86565b005b34801561047657600080fd5b5061047f610c03565b60405180826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c1610c25565b005b600160109054906101000a900460ff1681565b600360009054906101000a900460ff1681565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105e257600080fd5b8181600291906105f3929190610f3f565b505050565b6000600360009054906101000a900460ff16905090565b6000600160109054906101000a900460ff161561065e57600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169050610682565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107465780601f1061071b57610100808354040283529160200191610746565b820191906000526020600020905b81548152906001019060200180831161072957829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107d057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561084e573d6000803e3d6000fd5b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108af57600080fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561097357600080fd5b505af1158015610987573d6000803e3d6000fd5b505050506040513d602081101561099d57600080fd5b810190808051906020019092919050505090507f68b333934bebe88f9d460d709b614c41d6feeafe7585c524b441166d7856716c846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168584604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390a18091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ae157600080fd5b60018060106101000a81548160ff02191690831515021790555082600160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550818160029190610b45929190610f3f565b507fe49eb4b758b4cf05f8be0e4fe524b59a5167d2778884883b4815b2ac3860959c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050565b600160009054906101000a90046fffffffffffffffffffffffffffffffff1681565b60008060008060011515600160109054906101000a900460ff161515141515610c4d57600080fd5b600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff163410151515610c8c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f09f86d61eb5d6904c1fa8e5f071f171ec90eccc6e0a7b61d563a7d693db815f6846000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000600160106101000a81548160ff02191690831515021790555073e4aaa0fc768fbbafaa15f3cf16530b1d082a95b09250600360009054906101000a900460ff1660ff16600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16811515610e2757fe5b04915081600160009054906101000a90046fffffffffffffffffffffffffffffffff160390506000600160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff166108fc836fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015610edf573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015610f38573d6000803e3d6000fd5b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f8057803560ff1916838001178555610fae565b82800160010185558215610fae579182015b82811115610fad578235825591602001919060010190610f92565b5b509050610fbb9190610fbf565b5090565b610fe191905b80821115610fdd576000816000905550600101610fc5565b5090565b905600a165627a7a72305820a829189989a4f628325f95ca5ed2d524d878a91dcc0678a7677769df13d8e20d0029a165627a7a7230582073f3837b752248c93438b4802b03aeb8534023f4d6801bd69d6dc651baca25e70029",
  "sourceMap": "242:2559:0:-;;;442:5;420:27;;;;;;;;;;;;;;;;;;;;1203:50;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:50:0;1238:10;1230:5;;:18;;;;;;;;;;;;;;;;;;242:2559;;;;;;",
  "deployedSourceMap": "242:2559:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1900:74:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;596:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;420:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2464:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2464:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2724:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;506:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2127:101:0;;;;;;;;;;;;;;;;;;;;;;;1441:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:239:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:74;884:5;;;;;;;;;;;870:19;;:10;:19;;;862:28;;;;;;;;1968:1;1958:7;;:11;;;;;;;;;;;;;;;;;;1900:74;:::o;596:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;420:27::-;;;;;;;;;;;;;:::o;2464:152::-;2520:7;2544:9;:16;;;;2538:5;:22;2534:63;;;2575:9;2585:5;2575:16;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:23;;;;2534:63;2608:3;2601:10;;2464:152;;;;:::o;2724:72::-;2765:7;2786:5;;;;;;;;;;;2779:12;;2724:72;:::o;506:20::-;;;;;;;;;;;;;:::o;2127:101::-;2175:18;2207:9;:16;;;;2200:23;;2127:101;:::o;1441:239::-;1507:23;1537:21;1082:7;;;;;;;;;;;1081:8;1073:17;;;;;;;;1583:10;1561:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1561:33:0;1537:57;;1600:9;1615:2;1600:18;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1600:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1628:31;1655:2;1628:31;;;;;;;;;;;;;;;;;;;;;;1671:2;1664:9;;1441:239;;:::o;242:2559::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\r\n\r\nimport \"./TradeableContract.sol\";\r\nimport \"./ITradeableContract.sol\";\r\n\r\n/**\r\n * @title ContractCreator.\r\n * @dev Creator of Tradeable Wallet contracts. It is also a repository of Tradeable Wallet addresses.\r\n */\r\ncontract ContractCreator {\r\n\r\n  /**\r\n   * @dev Stores the information if the some functions should be paused in case of some undesirable situation (circuit breaker).   \r\n   */\r\n\tbool public stopped = false;\r\n\t\r\n  /**\r\n   * @dev Owner of this contract.   \r\n   */\r\n\taddress public owner;\t\r\n\r\n  /**\r\n   * @dev Stores all contracts already created.\r\n   */\r\n\taddress[] public contracts;\r\n \r\n  /**\r\n   * @dev Event to inform the creation of a new Tradeable  Wallet   \r\n   */ \r\n \tevent NewTradeableWallet(address addr);\r\n\r\n  /**\r\n   * @dev Assure that only the owner can invoke a function.   \r\n   */\r\n\tmodifier onlyOwner { \r\n\t\trequire(msg.sender == owner); \t\r\n\t\t_; \t\r\n\t}\t\t\r\n\t\r\n  /**\r\n   * @dev Safe mechanism check and pause the function in case of some undesirable situation (circuit breaker).   \r\n   */\r\n\tmodifier stopInEmergency { \r\n\t\trequire(!stopped); \r\n\t\t_; \r\n\t}\r\n\r\n  /**\r\n   * @dev Create a new contract. \r\n   * The owner is going to be msg.sender.   \r\n   */\r\n\tconstructor () public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n  /**\r\n   * @dev create a new Tradeable Contract, stores its reference and emit an event with the same info \r\n   * @return subcontractAddr the address of the create contract.\r\n   */\r\n\tfunction createTradeableContract() public stopInEmergency returns(address subcontractAddr) {\r\n\t\tITradeableContract tc = new TradeableContract(msg.sender); \r\n\t\tcontracts.push(tc);\r\n\t\temit NewTradeableWallet(address(tc));\r\n\t\treturn tc;\t\t\r\n\t}\r\n\r\n  /**\r\n   * @dev Useful to enable a pause in the creation of new Tradeable Contracts. \r\n   * It can only be called by the owner.\r\n   * @param b If true, it is not possible to create new Tradeable Contracts.\r\n   */\r\n\tfunction setCircuitBreaker (bool b) public onlyOwner {\r\n\t\tstopped = b;\r\n\t} \t\r\n\r\n  /**\r\n   * @dev Returns the number of Tradeable Contract created. \r\n   * @return contractCount the number of Tradeable Contract created.\r\n   */\r\n\tfunction getContractCount() public view returns(uint contractCount) {\r\n\t\treturn contracts.length;\r\n\t}\r\n\r\n  /**\r\n   * @dev Returns the address the Tradeable Contract created on a specific index. \r\n   * @param index index of the desirable result\r\n   * @return the address of the desirable Tradeable contract or 0x0 (if not found)\r\n   */\r\n\tfunction getContractAt(uint index) public view returns (address) {\r\n\t\tif (index<contracts.length) {\r\n\t\t\treturn contracts[index];\r\n\t\t}\r\n\t\treturn 0x0;\r\n\t}\r\n\r\n  /**\r\n   * @dev Returns the owner of this contract.\r\n   * @return the owner of this contract.\r\n   */\r\n\tfunction getOwner() public view returns (address) {\r\n\t\treturn owner;\r\n\t}\r\n\r\n}",
  "sourcePath": "C:\\workspace\\tradeable-wallet\\back-blockchain\\contracts\\ContractCreator.sol",
  "ast": {
    "absolutePath": "/C/workspace/tradeable-wallet/back-blockchain/contracts/ContractCreator.sol",
    "exportedSymbols": {
      "ContractCreator": [
        124
      ]
    },
    "id": 125,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/workspace/tradeable-wallet/back-blockchain/contracts/TradeableContract.sol",
        "file": "./TradeableContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 455,
        "src": "28:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/workspace/tradeable-wallet/back-blockchain/contracts/ITradeableContract.sol",
        "file": "./ITradeableContract.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 212,
        "src": "63:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          454
        ],
        "contractKind": "contract",
        "documentation": "@title ContractCreator.\r\n@dev Creator of Tradeable Wallet contracts. It is also a repository of Tradeable Wallet addresses.\r",
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124
        ],
        "name": "ContractCreator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "420:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "420:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "442:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "506:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "contracts",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "596:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "596:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 10,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "596:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Event to inform the creation of a new Tradeable  Wallet   \r",
            "id": 15,
            "name": "NewTradeableWallet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "740:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:14:0"
            },
            "src": "715:39:0"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "856:49:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "870:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "870:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 20,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "884:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "870:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        472,
                        473
                      ],
                      "referencedDeclaration": 472,
                      "src": "862:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "862:28:0"
                },
                {
                  "id": 24,
                  "nodeType": "PlaceholderStatement",
                  "src": "897:1:0"
                }
              ]
            },
            "documentation": "@dev Assure that only the owner can invoke a function.   \r",
            "id": 26,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:0"
            },
            "src": "837:68:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "1067:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1081:8:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 29,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1082:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        472,
                        473
                      ],
                      "referencedDeclaration": 472,
                      "src": "1073:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:17:0"
                },
                {
                  "id": 33,
                  "nodeType": "PlaceholderStatement",
                  "src": "1096:1:0"
                }
              ]
            },
            "documentation": "@dev Safe mechanism check and pause the function in case of some undesirable situation (circuit breaker).   \r",
            "id": 35,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:0"
            },
            "src": "1042:61:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "1225:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1230:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1238:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1238:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1230:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:18:0"
                }
              ]
            },
            "documentation": "@dev Create a new contract. \r\nThe owner is going to be msg.sender.   \r",
            "id": 44,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:0"
            },
            "scope": 124,
            "src": "1203:50:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1532:148:0",
              "statements": [
                {
                  "assignments": [
                    52
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52,
                      "name": "tc",
                      "nodeType": "VariableDeclaration",
                      "scope": 74,
                      "src": "1537:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITradeableContract_$211",
                        "typeString": "contract ITradeableContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51,
                        "name": "ITradeableContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 211,
                        "src": "1537:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITradeableContract_$211",
                          "typeString": "contract ITradeableContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "1583:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1561:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TradeableContract_$454_$",
                        "typeString": "function (address) returns (contract TradeableContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 53,
                        "name": "TradeableContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 454,
                        "src": "1565:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TradeableContract_$454",
                          "typeString": "contract TradeableContract"
                        }
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TradeableContract_$454",
                      "typeString": "contract TradeableContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1537:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "tc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1615:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITradeableContract_$211",
                          "typeString": "contract ITradeableContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITradeableContract_$211",
                          "typeString": "contract ITradeableContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1600:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1600:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "tc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1655:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITradeableContract_$211",
                              "typeString": "contract ITradeableContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ITradeableContract_$211",
                              "typeString": "contract ITradeableContract"
                            }
                          ],
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1647:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "NewTradeableWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1628:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "EmitStatement",
                  "src": "1623:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 71,
                    "name": "tc",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52,
                    "src": "1671:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITradeableContract_$211",
                      "typeString": "contract ITradeableContract"
                    }
                  },
                  "functionReturnParameters": 50,
                  "id": 72,
                  "nodeType": "Return",
                  "src": "1664:9:0"
                }
              ]
            },
            "documentation": "@dev create a new Tradeable Contract, stores its reference and emit an event with the same info \r\n@return subcontractAddr the address of the create contract.\r",
            "id": 74,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 47,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 46,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35,
                  "src": "1483:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1483:15:0"
              }
            ],
            "name": "createTradeableContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "subcontractAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1507:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1506:25:0"
            },
            "scope": 124,
            "src": "1441:239:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1953:21:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1958:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1968:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1958:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:11:0"
                }
              ]
            },
            "documentation": "@dev Useful to enable a pause in the creation of new Tradeable Contracts. \r\nIt can only be called by the owner.\r\n@param b If true, it is not possible to create new Tradeable Contracts.\r",
            "id": 86,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 79,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 78,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 26,
                  "src": "1943:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1943:9:0"
              }
            ],
            "name": "setCircuitBreaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1928:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1927:8:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:0"
            },
            "scope": 124,
            "src": "1900:74:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "2195:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2207:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2207:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "2200:23:0"
                }
              ]
            },
            "documentation": "@dev Returns the number of Tradeable Contract created. \r\n@return contractCount the number of Tradeable Contract created.\r",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getContractCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2152:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "contractCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2175:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2174:20:0"
            },
            "scope": 124,
            "src": "2127:101:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "2529:87:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2538:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2544:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2544:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2538:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "2534:63:0",
                  "trueBody": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2562:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "contracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2575:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 108,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2585:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2575:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 101,
                        "id": 109,
                        "nodeType": "Return",
                        "src": "2568:23:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "307830",
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2608:3:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x0"
                  },
                  "functionReturnParameters": 101,
                  "id": 113,
                  "nodeType": "Return",
                  "src": "2601:10:0"
                }
              ]
            },
            "documentation": "@dev Returns the address the Tradeable Contract created on a specific index. \r\n@param index index of the desirable result\r\n@return the address of the desirable Tradeable contract or 0x0 (if not found)\r",
            "id": 115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getContractAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2487:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2486:12:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2520:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2519:9:0"
            },
            "scope": 124,
            "src": "2464:152:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2774:22:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "2786:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "2779:12:0"
                }
              ]
            },
            "documentation": "@dev Returns the owner of this contract.\r\n@return the owner of this contract.\r",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2765:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2764:9:0"
            },
            "scope": 124,
            "src": "2724:72:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 125,
        "src": "242:2559:0"
      }
    ],
    "src": "0:2801:0"
  },
  "legacyAST": {
    "absolutePath": "/C/workspace/tradeable-wallet/back-blockchain/contracts/ContractCreator.sol",
    "exportedSymbols": {
      "ContractCreator": [
        124
      ]
    },
    "id": 125,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/workspace/tradeable-wallet/back-blockchain/contracts/TradeableContract.sol",
        "file": "./TradeableContract.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 455,
        "src": "28:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/workspace/tradeable-wallet/back-blockchain/contracts/ITradeableContract.sol",
        "file": "./ITradeableContract.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 125,
        "sourceUnit": 212,
        "src": "63:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          454
        ],
        "contractKind": "contract",
        "documentation": "@title ContractCreator.\r\n@dev Creator of Tradeable Wallet contracts. It is also a repository of Tradeable Wallet addresses.\r",
        "fullyImplemented": true,
        "id": 124,
        "linearizedBaseContracts": [
          124
        ],
        "name": "ContractCreator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "420:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "420:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 5,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "442:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "506:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "contracts",
            "nodeType": "VariableDeclaration",
            "scope": 124,
            "src": "596:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "596:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 10,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "596:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev Event to inform the creation of a new Tradeable  Wallet   \r",
            "id": 15,
            "name": "NewTradeableWallet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "740:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:14:0"
            },
            "src": "715:39:0"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "856:49:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "870:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "870:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 20,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "884:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "870:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        472,
                        473
                      ],
                      "referencedDeclaration": 472,
                      "src": "862:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "862:28:0"
                },
                {
                  "id": 24,
                  "nodeType": "PlaceholderStatement",
                  "src": "897:1:0"
                }
              ]
            },
            "documentation": "@dev Assure that only the owner can invoke a function.   \r",
            "id": 26,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:0"
            },
            "src": "837:68:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "1067:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1081:8:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 29,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1082:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        472,
                        473
                      ],
                      "referencedDeclaration": 472,
                      "src": "1073:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:17:0"
                },
                {
                  "id": 33,
                  "nodeType": "PlaceholderStatement",
                  "src": "1096:1:0"
                }
              ]
            },
            "documentation": "@dev Safe mechanism check and pause the function in case of some undesirable situation (circuit breaker).   \r",
            "id": 35,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:0"
            },
            "src": "1042:61:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "1225:28:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1230:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1238:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1238:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1230:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:18:0"
                }
              ]
            },
            "documentation": "@dev Create a new contract. \r\nThe owner is going to be msg.sender.   \r",
            "id": 44,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:0"
            },
            "scope": 124,
            "src": "1203:50:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1532:148:0",
              "statements": [
                {
                  "assignments": [
                    52
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52,
                      "name": "tc",
                      "nodeType": "VariableDeclaration",
                      "scope": 74,
                      "src": "1537:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITradeableContract_$211",
                        "typeString": "contract ITradeableContract"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51,
                        "name": "ITradeableContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 211,
                        "src": "1537:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITradeableContract_$211",
                          "typeString": "contract ITradeableContract"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "1583:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1561:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TradeableContract_$454_$",
                        "typeString": "function (address) returns (contract TradeableContract)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 53,
                        "name": "TradeableContract",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 454,
                        "src": "1565:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TradeableContract_$454",
                          "typeString": "contract TradeableContract"
                        }
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TradeableContract_$454",
                      "typeString": "contract TradeableContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1537:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62,
                        "name": "tc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1615:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITradeableContract_$211",
                          "typeString": "contract ITradeableContract"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITradeableContract_$211",
                          "typeString": "contract ITradeableContract"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1600:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1600:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "tc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1655:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITradeableContract_$211",
                              "typeString": "contract ITradeableContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ITradeableContract_$211",
                              "typeString": "contract ITradeableContract"
                            }
                          ],
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1647:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 65,
                      "name": "NewTradeableWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1628:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "EmitStatement",
                  "src": "1623:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 71,
                    "name": "tc",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52,
                    "src": "1671:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITradeableContract_$211",
                      "typeString": "contract ITradeableContract"
                    }
                  },
                  "functionReturnParameters": 50,
                  "id": 72,
                  "nodeType": "Return",
                  "src": "1664:9:0"
                }
              ]
            },
            "documentation": "@dev create a new Tradeable Contract, stores its reference and emit an event with the same info \r\n@return subcontractAddr the address of the create contract.\r",
            "id": 74,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 47,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 46,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35,
                  "src": "1483:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1483:15:0"
              }
            ],
            "name": "createTradeableContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "subcontractAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1507:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1506:25:0"
            },
            "scope": 124,
            "src": "1441:239:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1953:21:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1958:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1968:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1958:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:11:0"
                }
              ]
            },
            "documentation": "@dev Useful to enable a pause in the creation of new Tradeable Contracts. \r\nIt can only be called by the owner.\r\n@param b If true, it is not possible to create new Tradeable Contracts.\r",
            "id": 86,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 79,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 78,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 26,
                  "src": "1943:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1943:9:0"
              }
            ],
            "name": "setCircuitBreaker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1928:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1927:8:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:0"
            },
            "scope": 124,
            "src": "1900:74:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "2195:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2207:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2207:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "2200:23:0"
                }
              ]
            },
            "documentation": "@dev Returns the number of Tradeable Contract created. \r\n@return contractCount the number of Tradeable Contract created.\r",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getContractCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2152:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "contractCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "2175:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2174:20:0"
            },
            "scope": 124,
            "src": "2127:101:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "2529:87:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2538:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2544:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2544:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2538:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "2534:63:0",
                  "trueBody": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2562:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "contracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2575:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 108,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2585:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2575:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 101,
                        "id": 109,
                        "nodeType": "Return",
                        "src": "2568:23:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "307830",
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2608:3:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x0"
                  },
                  "functionReturnParameters": 101,
                  "id": 113,
                  "nodeType": "Return",
                  "src": "2601:10:0"
                }
              ]
            },
            "documentation": "@dev Returns the address the Tradeable Contract created on a specific index. \r\n@param index index of the desirable result\r\n@return the address of the desirable Tradeable contract or 0x0 (if not found)\r",
            "id": 115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getContractAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2487:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2486:12:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2520:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2519:9:0"
            },
            "scope": 124,
            "src": "2464:152:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2774:22:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "2786:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "2779:12:0"
                }
              ]
            },
            "documentation": "@dev Returns the owner of this contract.\r\n@return the owner of this contract.\r",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2765:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2764:9:0"
            },
            "scope": 124,
            "src": "2724:72:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 125,
        "src": "242:2559:0"
      }
    ],
    "src": "0:2801:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x8e4c131b37383e431b9cd0635d3cf9f3f628edae",
      "transactionHash": "0xabcad5056f5d090122079b32919c6b5ceb4127c32c524b4ecb295aa9ee6bff0e"
    },
    "1535041220267": {
      "events": {},
      "links": {},
      "address": "0x7a8d69378e9905a836560e04174a2d8144b67e61",
      "transactionHash": "0x58cd383ea7ad6df5efa6f169c245ad31b2f4a4d8e2390c17d0d9f9339c07b5c9"
    },
    "1535052428812": {
      "events": {},
      "links": {},
      "address": "0x199e3b9879259fcc3363854fc5fe4da50ccedfe4",
      "transactionHash": "0x13988904351679048a6dc668e3c560751f69fb132f2179d52d68bf195823a8cb"
    },
    "1535086768118": {
      "events": {},
      "links": {},
      "address": "0x6e8b3a0c445b048d6c47f437dbb9e8e9dfe683d2",
      "transactionHash": "0x1e7e31f6b9a995c9781faff40aab54f68400c2f45f8a1e70e838d2db76a4febf"
    },
    "1535203489219": {
      "events": {},
      "links": {},
      "address": "0xaa5722e8413680c1e250c40731fe4d8445494618",
      "transactionHash": "0x42430acf865b7d3915d670ce2307d214d2d6fc57f2f1da914737ae418305a089"
    },
    "1535262372463": {
      "events": {},
      "links": {},
      "address": "0xb143c1e943cd076b4d6c1121e5ab08da2f5329d8",
      "transactionHash": "0x956084bafa179cdf2227db27ebae1f0b41df351ca3365253430dd3c64dabb67b"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-27T02:39:26.295Z"
}